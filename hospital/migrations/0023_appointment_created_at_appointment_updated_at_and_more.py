# Generated by Django 5.2 on 2025-05-13 14:17

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hospital', '0022_alter_doctor_department_alter_nurse_department'),
    ]

    operations = [
        migrations.AddField(
            model_name='appointment',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='appointment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='doctor',
            name='available',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='nurse',
            name='available',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='patientdischargedetails',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='patientdischargedetails',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='appointment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='department',
            field=models.CharField(choices=[('Cardiologista', 'Cardiologista'), ('Dermatologista', 'Dermatologista'), ('Clinico Geral', 'Clinico Geral'), ('Emergency Medicine Specialists', 'Emergency Medicine Specialists'), ('Allergistas/Immunologistas', 'Allergistas/Immunologistas'), ('Anestesiologistas', 'Anestesiologistas'), ('Colon and Rectal Surgeons', 'Colon and Rectal Surgeons')], default='Cardiologista', max_length=50),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='nurse',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='admit_date',
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='patient',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='numero_cns',
            field=models.CharField(blank=True, help_text='Informe os 15 dígitos do Cartão Nacional de Saúde', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='O número do CNS deve conter 15 dígitos.', regex='^\\d{15}$')], verbose_name='Número do CNS'),
        ),
        migrations.AlterField(
            model_name='patientdischargedetails',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='Folga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('enfermeiro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.nurse')),
                ('medico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=10)),
                ('tipo', models.CharField(choices=[('UTI', 'UTI'), ('CTI', 'CTI'), ('Emergência', 'Emergência'), ('Enfermaria', 'Enfermaria'), ('Isolamento', 'Isolamento'), ('Sala de Observação', 'Sala de Observação')], max_length=30)),
                ('entrada', models.DateTimeField(blank=True, editable=False, null=True)),
                ('saida', models.DateTimeField(blank=True, editable=False, null=True)),
                ('disponivel', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paciente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.patient')),
            ],
        ),
        migrations.CreateModel(
            name='RoomHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entrada', models.DateTimeField()),
                ('saida', models.DateTimeField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(default=django.utils.timezone.now)),
                ('paciente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.patient')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.room')),
            ],
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50)),
                ('rua', models.CharField(max_length=50)),
                ('numero', models.CharField(max_length=10)),
                ('bairro', models.CharField(max_length=20)),
                ('cidade', models.CharField(max_length=30)),
                ('disponivel', models.BooleanField(default=True)),
            ],
            options={
                'unique_together': {('nome', 'rua', 'numero')},
            },
        ),
        migrations.AddField(
            model_name='room',
            name='unidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.unidade'),
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('numero', 'unidade')},
        ),
        migrations.CreateModel(
            name='Escala',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(null=True)),
                ('disponivel', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enfermeiro', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.nurse')),
                ('medico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.doctor')),
                ('local', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hospital.unidade')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('data', 'medico'), name='unique_escala_medico'), models.UniqueConstraint(fields=('data', 'enfermeiro'), name='unique_escala_enfermeiro')],
            },
        ),
    ]
